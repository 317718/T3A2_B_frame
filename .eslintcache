[{"/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/index.js":"1","/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/App.js":"2","/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/Navbar.js":"3","/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/pages/Home.js":"4","/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/pages/EditBooking.js":"5","/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/pages/Booking.js":"6","/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/pages/AdminBookings.js":"7","/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/pages/Admin.js":"8","/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/pages/DashBoard.js":"9","/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/pages/ViewBooking.js":"10","/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/pages/Contact/Contact.js":"11","/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/pages/Services/Services.js":"12","/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/pages/Services/EditService.js":"13","/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/pages/Services/DeleteService.js":"14","/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/pages/Services/NewService.js":"15","/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/config/api.js":"16","/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/BookingForm.js":"17","/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/HeroSection.js":"18","/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/Button.js":"19","/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/LogoutButton.js":"20","/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/Login.js":"21","/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/pages/Records.js":"22","/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/layout/Spinner.js":"23"},{"size":146,"mtime":1612787607093,"results":"24","hashOfConfig":"25"},{"size":3602,"mtime":1612850236699,"results":"26","hashOfConfig":"25"},{"size":2482,"mtime":1612830545498,"results":"27","hashOfConfig":"25"},{"size":176,"mtime":1611469026853,"results":"28","hashOfConfig":"25"},{"size":6951,"mtime":1612843577802,"results":"29","hashOfConfig":"25"},{"size":614,"mtime":1612830545499,"results":"30","hashOfConfig":"25"},{"size":1020,"mtime":1612841741558,"results":"31","hashOfConfig":"25"},{"size":1286,"mtime":1612830545499,"results":"32","hashOfConfig":"25"},{"size":411,"mtime":1612850236701,"results":"33","hashOfConfig":"25"},{"size":1237,"mtime":1612786416044,"results":"34","hashOfConfig":"25"},{"size":5168,"mtime":1612787607085,"results":"35","hashOfConfig":"25"},{"size":2120,"mtime":1612848503525,"results":"36","hashOfConfig":"25"},{"size":3727,"mtime":1612830545506,"results":"37","hashOfConfig":"25"},{"size":3422,"mtime":1612830545505,"results":"38","hashOfConfig":"25"},{"size":3070,"mtime":1612830545507,"results":"39","hashOfConfig":"25"},{"size":71,"mtime":1612787607177,"results":"40","hashOfConfig":"25"},{"size":6118,"mtime":1612845236025,"results":"41","hashOfConfig":"25"},{"size":1573,"mtime":1612792136632,"results":"42","hashOfConfig":"25"},{"size":393,"mtime":1612830545495,"results":"43","hashOfConfig":"25"},{"size":374,"mtime":1612850236701,"results":"44","hashOfConfig":"25"},{"size":2584,"mtime":1612850236700,"results":"45","hashOfConfig":"25"},{"size":2719,"mtime":1612852268106,"results":"46","hashOfConfig":"25"},{"size":206,"mtime":1612147749038,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"totaf5",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/index.js",[],"/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/App.js",[],"/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/Navbar.js",[],"/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/pages/Home.js",[],"/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/pages/EditBooking.js",["100","101","102","103","104","105","106"],"import React, {useState, useEffect} from \"react\"\nimport Select from 'react-select'\n\nfunction EditBooking(props) {\n  const [state, setState] = useState({\n    first_name: '',\n    last_name: '',\n    phonenumber: '',\n    email: '',\n    address: '',\n    notes: '',\n    service_id: null,\n    suburb_id: null,\n    // suburbs: [],\n    // optionsServices: [],\n    postcode: '4000',\n    booking_date: '',\n    suburb: {value: \"\", label: \"\"},\n    service: {value: \"\", label: \"\"}\n  })\n\n  const [services, setServices] = useState([])\n  const [suburbs, setSuburbs] = useState([])\n\n  const handleOptions = selectedService => {\n    let newState = {...state}\n    setState({...newState, service_id: selectedService.value})\n}\n\n  const handleSuburb = selectedSuburb => {\n    let newState = {...state}\n    setState({...newState, suburb_id: selectedSuburb.value})\n  }\n\n  const handleChange = (event) => {\n    let name = event.target.name\n    let value = event.target.value\n    let newState = {...state}\n    setState({...newState, [name]: value})\n}\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    let ph = state.phonenumber\n    if (!Number(ph)) {\n        alert(\"Phone must be a number\")\n    }\n    fetch('https://larryslawncare.herokuapp.com/bookings/' + state.id, {\n      method: 'PUT',\n      body: JSON.stringify(state),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(response => {\n        if (response.status == 204) {\n            props.history.push(\"/admin/bookings\")\n        } else {\n          alert(\"Please fill in all fields\")\n        }\n    })\n  }\n  \n  useEffect(() => {\n    const {suburb_id, suburb, service, service_id} = state\n    if (suburb_id != null && suburb.value == \"\" && suburbs.length > 0) {\n      const found = suburbs.find(suburb => suburb.value == suburb_id);\n      setState({...state, suburb: found})\n    }\n    if (service_id != null && service.value == \"\" && services.length > 0) {\n      const foundservice = services.find(service => service.value == service_id);\n      setState({...state, service: foundservice})\n    }\n  })\n\n  // useEffect(() => {\n  //   const {service_id, service} = state\n  //   if (service_id != null && service.value == \"\") {\n  //     const foundservice = services.find(service => service.value == service_id);\n  //     setState({...state, service: foundservice})\n  //   }\n  // }, [state.service_id])\n\n  useEffect(() => {\n    fetch('https://larryslawncare.herokuapp.com/services')\n    .then(result => result.json())\n    .then(data => {\n      let array = []\n      data.forEach((element) => {\n        array.push({\n          value: element.id,\n          label: element.service_name\n        })\n      })\n      setServices(array)\n    })\n\n    fetch('https://larryslawncare.herokuapp.com/suburbs')\n    .then(result => result.json())\n    .then (data => {\n        let array = []\n        data.forEach((element) => {\n        array.push({\n            value: element.id,\n            label: element.name\n        })\n        })\n        setSuburbs(array)\n    })\n\n    fetch(`https://larryslawncare.herokuapp.com/bookings/${props.match.params.id}`)\n    .then(result => result.json())\n    .then(booking => {\n      setState({...state, ...booking})\n    })\n  }, [])\n\n\n\n  return (\n    <div className=\"bookingForm\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"one-half column\">\n              <label htmlFor=\"first_name\">\n                First Name\n              </label>\n              <input \n                className=\"u-full-width\"\n                type=\"text\" \n\n                name=\"first_name\" \n                id=\"first_name\"\n                onChange={handleChange}\n                value={state.first_name}\n              />\n              <label htmlFor=\"last_name\">\n                Last Name\n              </label>\n              <input \n                className=\"u-full-width\"\n                type=\"text\" \n                name=\"last_name\"  \n                id=\"last_name\" \n                onChange={handleChange}\n                value={state.last_name}\n              />\n              <label htmlFor=\"phonenumber\">\n                Phone\n              </label>\n              <input \n                className=\"u-full-width\"\n                type=\"tel\" \n                name=\"phonenumber\"  \n                id=\"phonenumber\" \n                onChange={handleChange}\n                value={state.phonenumber}\n              />\n              <label htmlFor=\"email\">\n                Email\n              </label>\n              <input \n              className=\"u-full-width\"\n              type=\"email\" \n              name=\"email\"  \n              id=\"email\"\n                onChange={handleChange}\n                value={state.email} \n              />\n              <label htmlFor=\"address\">\n                Address\n              </label>\n              <input \n                className=\"u-full-width\"\n                type=\"text\" \n                name=\"address\"  \n                id=\"address\"\n                onChange={handleChange} \n                value={state.address}\n              />\n              <label htmlFor=\"suburb_id\">\n                Suburb\n              </label>\n              <Select \n                  id=\"suburbselect\"\n                  className=\"u-full-width\"\n                  onChange={handleSuburb}\n                  name=\"suburb_id\"\n                  options={suburbs}\n                  value={state.suburb}\n              >\n              </Select>\n            </div>\n            <div className=\"one-half column\">\n              <label htmlFor=\"service_id\">\n                Services required\n              </label>\n              <Select \n                  id=\"serviceselect\"\n                  className=\"u-full-width\"\n                  onChange={handleOptions}\n                  name=\"service_id\"\n                  options={services}\n                  placeholder=\"Select all services required\"\n                  value={state.service}\n              />\n              <label htmlFor=\"booking_date\">\n                    Date\n                  </label>\n                  <input \n                    className=\"u-full-width\"\n                    type=\"date\" \n                    name=\"booking_date\"  \n                    id=\"booking_date\" \n                    onChange={handleChange}\n                    value={state.booking_date}\n                  />\n              <label htmlFor=\"notes\">\n                Notes\n              </label>\n              <textarea \n                  className=\"u-full-width\" \n                  name=\"notes\"\n                  onChange={handleChange}\n                  value={state.notes || \"\"}\n              /> \n              <input \n                  className=\"button-primary\" \n                  type=\"submit\" \n                  value=\"Submit\" \n              />\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default EditBooking;","/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/pages/Booking.js",[],"/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/pages/AdminBookings.js",["107","108","109","110","111","112"],"import {useEffect, useState} from 'react'\nimport { BrowserRouter, Route, Link, Switch } from 'react-router-dom';\nimport Records from './Records'\n\n\n\nfunction AdminBookings(props) {\n    const [records, setRecords] = useState([])\n\n    useEffect(() => {\n      fetch('https://larryslawncare.herokuapp.com/bookings')\n        .then(res => res.json())\n        .then(data => {\n          setRecords(data)\n          console.log(data)\n        })\n  }, [])\n\n    const deleteRecord = (id) => {\n      fetch('https://larryslawncare.herokuapp.com/bookings/' + id, {\n        method: \"DELETE\"\n      })\n        .then(response => {\n          if (response.status == 200) {\n            let newRecords = [...records]\n            newRecords = newRecords.filter(record => record.id != id)\n            setRecords(newRecords)\n          }\n        })\n      }\n\n    return (\n      <>\n        <Records records={records} services={props.services} suburbs={props.suburbs} deleteRecord={deleteRecord}  />\n      </>\n    );\n}\n\n\nexport default AdminBookings;\n\n","/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/pages/Admin.js",[],"/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/pages/DashBoard.js",["113"],"import React from \"react\";\n\nconst Dashboard = (props) => {\n  const { loggedInStatus } = props;\n\n  if (loggedInStatus === \"NOT_LOGGED_IN\") {\n    window.location.href = \"/\";\n  }\n\n  const handleLogoutClick = () => {\n    window.location.href = \"/\";\n  }\n\n  return (\n    <div>\n      <h1>Test</h1>\n      \n      {/* <button onClick={handleLogoutClick}>Log out!!</button> */}\n    </div>\n  )\n};\n\nexport default Dashboard;","/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/pages/ViewBooking.js",[],"/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/pages/Contact/Contact.js",["114","115"],"import React from 'react';\nimport './Contact.css';\nimport API from '../../config/api'\nimport Spinner from '../../layout/Spinner'\nimport { Link } from 'react-router-dom';\nimport { Form, Col, Container, Row, Card } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Contact extends React.Component {\n    state = {\n        name: []\n    }\n\n  componentDidMount () {\n    this.setState({ loading: true })\n\n    fetch(`${API}suburbs`)\n    .then(response => response.json())\n    .then(data => this.setState({name: data, loading: false}));  \n  }\n\n\n  render() {\n    const {name, loading} = this.state\n\n    if(loading) {\n        return <Spinner />\n    } else {\n    return (\n        <div className=\"contact-bg\">\n            <div className=\"contactCard\">\n                <div className=\"contactContainer\">\n                    <Container>\n                        <Form>\n                            <Row>\n                                <Col md>\n                                    <div className=\"contactleftpart\">\n                                        <Card className=\"uppart\">\n                                        \n                                            <Card.Header className=\"contact-h1\">\n                                                <h1 className=\"contactUs\">Contact Us</h1>\n                                            </Card.Header>\n                                            <Col className=\"contactCol\">\n                                                \n                                                <div >Contact Number: 07 3805 7265</div>\n                                                <div >Email: Larry@larryslawncare.com.au</div>        \n                                                <Row className=\"IconList\">\n                                                    <div className=\"socialIcon\">\n                                                        <a href=\"https://www.facebook.com/\" target=\"_blank\" className=\"fab fa-facebook-square fa-3x\"> </a>\n                                                    </div>\n                                                    <div className=\"socialIcon\">\n                                                        <a href=\"https://www.instagram.com/?hl=en\" target=\"_blank\" className=\"fab fa-instagram-square fa-3x\"> </a>\n                                                    </div>\n                                                </Row>\n                                            </Col>\n                                        </Card>\n                                        \n                                        <Card className=\"downpart\">\n                                            <Card.Header className=\"contact-h1\">\n                                                <h3 className=\"service-area\">Servicing these areas...</h3>\n                                            </Card.Header>\n                                            <ul className=\"areaList\">\n                                                {name.map(suburb => <li key = {suburb.id}>{suburb.name + \",\"}</li>)}\n                                            </ul>\n                                            \n                                        </Card>\n\n                                        {/* <Card className=\"contactrightDown\"> */}\n                                            <div className=\"leftBpart\">\n                                                <Link to='booking'>\n                                                    <button id='c_booking'>Booking Now<i className='far fa-play-circle' /></button>\n                                                </Link>\n                                            </div> \n                                        {/* </Card> */}\n                                    </div>\n                                </Col>\n                                <Col md>\n                                    <div className=\"rightpart\">\n                                        <Card className=\"contactrightUp\" >\n                                            <div>\n                                                <Card.Img src=\"images/Contact_Page_Image3.jpg\" alt=\"Contact Us\" />\n                                            </div>\n                                        \n                                        </Card>\n                                        \n                                        \n                                        {/* <Card className=\"contactrightDown\"> */}\n                                            {/* <div className=\"rightdownpart\">\n                                                <Link to='booking'>\n                                                    <button id='c_booking'>Booking Now<i className='far fa-play-circle' /></button>\n                                                </Link>\n                                            </div> */}\n                                        {/* </Card> */}\n                                    </div>\n\n                                </Col>\n                            </Row>\n                        </Form>\n                    </Container>\n                </div>\n            </div>\n        </div>\n    )};\n  }\n}\n\nexport default Contact","/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/pages/Services/Services.js",[],"/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/pages/Services/EditService.js",[],"/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/pages/Services/DeleteService.js",["116"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\nimport API from '../../config/api'\nimport { Form, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './DeleteService.css';\n\nexport default function DeleteService(props) {\n\n    // setting the initial state of the service to blank - setServiceInfo called in useEffect upon mounting\n    const [serviceInfo, setServiceInfo] = useState({\n        service_name: \"\",\n        price: \"\"\n    })\n\n    const handleDelete = (id) => {\n        fetch(`${API}services/${id}`, {\n            method: 'DELETE'\n        })\n        .then(result => {\n            if (result.status === 200) {\n                let currentListOfServices = [...props.services] // clones the original array\n                currentListOfServices = currentListOfServices.filter(service => service.id !== id) // checks the array to see if there is an existing service id, if false, will not render\n                alert(\"The service has been successfully deleted\")\n                props.setServices(currentListOfServices) // updates the setServices\n                props.history.push(\"/services\") // redirects to services list page\n            } else {\n                alert(\"There has been an error processing this request. Please try again\")\n                props.history.push(\"/services\")\n            }\n        })\n    }\n    \n    useEffect(() => {\n        fetch(`${API}services/${props.match.params.id}`)\n        .then(result => result.json())\n        .then(data => setServiceInfo(data))\n        // let service = props.services[props.match.params.id]\n        // console.log(service) // checks to see that data is being returned upon mounting - Object including service details returned\n        // setServiceInfo(service) // sets the data for the form to allow for editing\n    }, [])\n\n\n    return (\n        <div className=\"deleteService-bg\">\n            <div className=\"deleteServiceCard\">\n                <div className=\"deleteServiceContainer\">\n                    <Col className=\"deleteService-column\">\n                        <Form className=\"deleteService-form\">\n                            <div className=\"deleteService-h1\">\n                                <h1>Delete Service</h1>\n                            </div>\n                            <Form.Text className=\"deleteService-h4\">\n                                <h4>Are you sure you want to delete this service?</h4>\n                            </Form.Text>\n                            <Form.Text className=\"deleteService-h51\">   \n                                <p>Service name: </p>\n                            </Form.Text>\n                            <Form.Text className=\"deleteService-h52\">\n                                <h5>{serviceInfo.service_name}</h5>\n                            </Form.Text>\n                            <Form.Text className=\"deleteService-h53\">\n                                <h5>Price: $ {serviceInfo.price}</h5>\n                            </Form.Text> \n                                <button id=\"deleteServiceButton\" onClick={() => handleDelete(serviceInfo.id)}>Delete</button>\n                                \n                            <Link to=\"/services\" className=\"backservice\">Back to Services</Link>\n                        </Form>\n                    </Col>\n                </div>\n            </div>\n        </div>\n    )\n}","/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/pages/Services/NewService.js",[],"/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/config/api.js",[],"/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/BookingForm.js",["117"],"import React from \"react\"\nimport Select from 'react-select' \n\nclass BookingForm extends React.Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             first_name: '',\n             last_name: '',\n             phonenumber: '',\n             email: '',\n             address: '',\n             notes: '',\n             service_id: null,\n             suburb_id: null,\n             suburbs: [],\n             optionsServices: [],\n             postcode: '4000',\n             booking_date: ''\n        }\n    }\n\n\n    handleOptions = selectedService => {\n        this.setState({service_id: selectedService.value})\n    }\n\n    handleSuburb = selectedSuburb => {\n      this.setState({suburb_id: selectedSuburb.value})\n    }\n\n    handleChange = (event) => {\n      let name = event.target.name\n      let value = event.target.value\n      this.setState({[name]: value})\n  }\n    \n    handleSubmit = (event) => {\n      event.preventDefault()\n      // let ph = this.state.phonenumber\n      // if (!Number(ph)) {\n      //   alert(\"Phone must be a number\")\n      // }\n      fetch('https://larryslawncare.herokuapp.com/bookings', {\n        method: 'POST',\n        body: JSON.stringify(this.state),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      .then(response => {\n        return response.json()\n      })\n      .then((data) => console.log(data))\n      .catch(() => alert(\"Please fill in all fields\"))\n    }\n    \n    componentDidMount() {\n      fetch('https://larryslawncare.herokuapp.com/services')\n      .then(result => result.json())\n      .then(data => {\n        let array = []\n        data.forEach((element) => {\n          array.push({\n            value: element.id,\n            label: element.service_name\n          })\n        })\n        this.setState({optionsServices: array})\n        console.log(array)\n        \n        fetch('https://larryslawncare.herokuapp.com/suburbs')\n        .then(result => result.json())\n        .then (data => {\n              let suburbs = []\n              data.forEach((element) => {\n                suburbs.push({\n                  value: element.id,\n                  label: element.name\n                })\n              })\n              this.setState({suburbs: suburbs})\n              console.log(suburbs)\n            })\n          })\n        }\n        \n        render() {\n          const { selectedService } = this.state\n          return (\n            <div className=\"bookingForm\">\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"one-half column\">\n                <label htmlFor=\"first_name\">\n                  First Name\n                </label>\n                <input \n                  className=\"u-full-width\"\n                  type=\"text\" \n                  \n                  name=\"first_name\" \n                  id=\"first_name\"\n                  onChange={this.handleChange}\n                  />\n                <label htmlFor=\"last_name\">\n                  Last Name\n                </label>\n                <input \n                  className=\"u-full-width\"\n                  type=\"text\" \n                  name=\"last_name\"  \n                  id=\"last_name\" \n                  onChange={this.handleChange}\n                  />\n                <label htmlFor=\"phonenumber\">\n                  Phone\n                </label>\n                <input \n                  className=\"u-full-width\"\n                  type=\"tel\" \n                  name=\"phonenumber\"  \n                  id=\"phonenumber\" \n                  onChange={this.handleChange}\n                  />\n                <label htmlFor=\"email\">\n                  Email\n                </label>\n                <input \n                className=\"u-full-width\"\n                type=\"email\" \n                name=\"email\"  \n                id=\"email\"\n                onChange={this.handleChange} \n                />\n                <label htmlFor=\"address\">\n                  Address\n                </label>\n                <input \n                  className=\"u-full-width\"\n                  type=\"text\" \n                  name=\"address\"  \n                  id=\"address\"\n                  onChange={this.handleChange} \n                  />\n                <label htmlFor=\"suburb_id\">\n                  Suburb\n                </label>\n                <Select \n                  id=\"suburbs\"\n                    className=\"u-full-width\"\n                    onChange={this.handleSuburb}\n                    name=\"suburb_id\"\n                    options={this.state.suburbs}\n                    >\n                </Select>\n              </div>\n              <div className=\"one-half column\">\n                <label htmlFor=\"service_id\">\n                  Services required\n                </label>\n                <Select \n                    id=\"services\"\n                    className=\"u-full-width\"\n                    onChange={this.handleOptions}\n                    name=\"service_id\"\n                    options={this.state.optionsServices}\n                    placeholder=\"Select all services required\"\n                    />\n                <label htmlFor=\"booking_date\">\n                      Date\n                    </label>\n                    <input \n                      className=\"u-full-width\"\n                      type=\"date\" \n                      name=\"booking_date\"  \n                      id=\"booking_date\" \n                      onChange={this.handleChange}\n                      />\n                <label htmlFor=\"notes\">\n                  Notes\n                </label>\n                <textarea \n                    className=\"u-full-width\" \n                    name=\"notes\"\n                    onChange={this.handleChange}\n                    /> \n                <input \n                    className=\"button-primary\" \n                    type=\"submit\" \n                    value=\"Submit\" \n                    />\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default BookingForm;","/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/HeroSection.js",[],"/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/Button.js",[],"/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/LogoutButton.js",[],"/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/Login.js",[],"/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/pages/Records.js",["118","119","120","121"],"/Users/bel/Work/Coder_Academy/Assignments/BillieLeversedge_T3A2/T3A2_B_frame/src/components/layout/Spinner.js",[],{"ruleId":"122","severity":1,"message":"123","line":56,"column":29,"nodeType":"124","messageId":"125","endLine":56,"endColumn":31},{"ruleId":"126","severity":1,"message":"127","line":64,"column":3,"nodeType":"128","endLine":64,"endColumn":12,"suggestions":"129"},{"ruleId":"122","severity":1,"message":"123","line":66,"column":43,"nodeType":"124","messageId":"125","endLine":66,"endColumn":45},{"ruleId":"122","severity":1,"message":"123","line":67,"column":57,"nodeType":"124","messageId":"125","endLine":67,"endColumn":59},{"ruleId":"122","severity":1,"message":"123","line":70,"column":45,"nodeType":"124","messageId":"125","endLine":70,"endColumn":47},{"ruleId":"122","severity":1,"message":"123","line":71,"column":67,"nodeType":"124","messageId":"125","endLine":71,"endColumn":69},{"ruleId":"126","severity":1,"message":"130","line":116,"column":6,"nodeType":"131","endLine":116,"endColumn":8,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":2,"column":10,"nodeType":"128","messageId":"135","endLine":2,"endColumn":23},{"ruleId":"133","severity":1,"message":"136","line":2,"column":25,"nodeType":"128","messageId":"135","endLine":2,"endColumn":30},{"ruleId":"133","severity":1,"message":"137","line":2,"column":32,"nodeType":"128","messageId":"135","endLine":2,"endColumn":36},{"ruleId":"133","severity":1,"message":"138","line":2,"column":38,"nodeType":"128","messageId":"135","endLine":2,"endColumn":44},{"ruleId":"122","severity":1,"message":"123","line":24,"column":31,"nodeType":"124","messageId":"125","endLine":24,"endColumn":33},{"ruleId":"122","severity":1,"message":"139","line":26,"column":64,"nodeType":"124","messageId":"125","endLine":26,"endColumn":66},{"ruleId":"133","severity":1,"message":"140","line":10,"column":9,"nodeType":"128","messageId":"135","endLine":10,"endColumn":26},{"ruleId":"141","severity":1,"message":"142","line":49,"column":57,"nodeType":"143","endLine":49,"endColumn":150},{"ruleId":"141","severity":1,"message":"142","line":52,"column":57,"nodeType":"143","endLine":52,"endColumn":158},{"ruleId":"126","severity":1,"message":"144","line":42,"column":8,"nodeType":"131","endLine":42,"endColumn":10,"suggestions":"145"},{"ruleId":"133","severity":1,"message":"146","line":90,"column":19,"nodeType":"128","messageId":"135","endLine":90,"endColumn":34},{"ruleId":"122","severity":1,"message":"123","line":28,"column":63,"nodeType":"124","messageId":"125","endLine":28,"endColumn":65},{"ruleId":"122","severity":1,"message":"123","line":29,"column":19,"nodeType":"124","messageId":"125","endLine":29,"endColumn":21},{"ruleId":"122","severity":1,"message":"123","line":37,"column":58,"nodeType":"124","messageId":"125","endLine":37,"endColumn":60},{"ruleId":"122","severity":1,"message":"123","line":38,"column":16,"nodeType":"124","messageId":"125","endLine":38,"endColumn":18},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setState'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [state, suburbs, services] as a second argument to the useEffect Hook.","Identifier",["147"],"React Hook useEffect has missing dependencies: 'props.match.params.id' and 'state'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.","ArrayExpression",["148"],"no-unused-vars","'BrowserRouter' is defined but never used.","unusedVar","'Route' is defined but never used.","'Link' is defined but never used.","'Switch' is defined but never used.","Expected '!==' and instead saw '!='.","'handleLogoutClick' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["149"],"'selectedService' is assigned a value but never used.",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},"Add dependencies array: [state, suburbs, services]",{"range":"156","text":"157"},"Update the dependencies array to be: [props.match.params.id, state]",{"range":"158","text":"159"},"Update the dependencies array to be: [props.match.params.id]",{"range":"160","text":"161"},[2079,2079],", [state, suburbs, services]",[3216,3218],"[props.match.params.id, state]",[1875,1877],"[props.match.params.id]"]